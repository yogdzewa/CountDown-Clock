C51 COMPILER V9.60.0.0   HELP_FUNC                                                         07/02/2022 00:48:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HELP_FUNC
OBJECT MODULE PLACED IN .\output\help_func.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE source\help_func.c OPTIMIZE(8,SPEED) INCDIR(.\inc) PRINT(.\list\help_fun
                    -c.lst) TABS(2) OBJECT(.\output\help_func.obj)

line level    source

   1          #include "help_func.h"
   2          #include "callback.h"
   3          // used for reset value
   4          XDATA uchar TIME_RELD_H = 0;
   5          XDATA uchar TIME_RELD_M = 50;
   6          XDATA uchar TIME_RELD_S = 21;
   7          XDATA uchar TIME_REST_M = 11;
   8          // used for countdown process
   9          uchar TIME_LIMIT_hour = 0;
  10          uchar TIME_LIMIT_minute = 50;
  11          uchar TIME_LIMIT_second = 21;
  12          // tmp var and macros
  13          int diff;
  14          int diff_t;
  15          #define CLOCK_SAME_COND(ele) (base.##ele == cur.##ele)
  16          #define CLKs_DIFF(ele) ((int)cur.##ele - (int)base.##ele)
  17          #define CLK_LIMIT_DIFF(ele) (TIME_LIMIT_##ele - time_diff_tmp.##ele)
  18          #define CNT_DOWN(ele, prv) ((CLK_LIMIT_DIFF(ele) < (uchar)60) ? CLK_LIMIT_DIFF(ele) : (time_diff_tmp.##prv
             ---, ((uchar)60 + CLK_LIMIT_DIFF(ele))))
  19          
  20          void time_diff_count_down(struct_DS1302_RTC base, struct_DS1302_RTC cur)
  21          {
  22   1          diff = CLKs_DIFF(hour) * 3600 + CLKs_DIFF(minute) * 60 + CLKs_DIFF(second);
  23   1          diff_t = (int)TIME_LIMIT_hour * 3600 + (int)TIME_LIMIT_minute * 60 + (int)TIME_LIMIT_second - diff;
  24   1          if (diff_t < 0)
  25   1          {
  26   2              diff_t = diff + diff_t + diff;
  27   2              TIME_LIMIT_hour = diff_t / 3600;
  28   2              TIME_LIMIT_minute = diff_t % 3600 / 60;
  29   2              TIME_LIMIT_second = diff_t % 60;
  30   2              diff_t = diff_t - diff;
  31   2          }
  32   1          time_diff_tmp.hour = diff_t / 3600;
  33   1          time_diff_tmp.minute = diff_t % 3600 / 60;
  34   1          time_diff_tmp.second = diff_t % 60;
  35   1      
  36   1          if (!CLOCK_SAME_COND(day))
  37   1              time_diff_tmp.hour = TIME_LIMIT_hour - ((23 - base.hour) + cur.hour);
  38   1      }
  39          
  40          void delay_ms(uint n)
  41          {
  42   1          while (n)
  43   1          {
  44   2              uchar i, j;
  45   2              i = 11;
  46   2              j = 190;
  47   2              do
  48   2              {
  49   3                  while (--j)
  50   3                      ;
  51   3              } while (--i);
  52   2              n--;
  53   2          }
C51 COMPILER V9.60.0.0   HELP_FUNC                                                         07/02/2022 00:48:28 PAGE 2   

  54   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
